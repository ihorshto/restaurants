services:
  # Database
  restaurants.sgbd:
    build:
      context: ./restaurants.sgbd/
      dockerfile: Dockerfile
    container_name: restaurants.sgbd
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - './restaurants.sgbd/db:/var/lib/mysql'
    ports:
      - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -P ${DB_PORT} -p${DB_ROOT_PASSWORD} | grep 'mysqld is alive' || exit 1" ]
      interval: 5s
      timeout: 30s
      retries: 10



  # Adminer - No dependance
  restaurants.dbviewer:
    build:
      context: ./restaurants.dbviewer/
      dockerfile: Dockerfile
    container_name: restaurants.dbviewer
    restart: unless-stopped
    depends_on:
      restaurants.sgbd:
        condition: service_healthy
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}


  # Elasticsearch
  restaurants.elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.2
    container_name: restaurants.elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200



  # Kibana
  restaurants.kibana:
    image: docker.elastic.co/kibana/kibana:8.16.2
    container_name: restaurants.kibana
    ports:
      - 5601:5601
    depends_on:
      - restaurants.elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://restaurants.elasticsearch:9200/
    volumes:
      - kibana_data:/usr/share/kibana/data

volumes:
  esdata:
  kibana_data:

